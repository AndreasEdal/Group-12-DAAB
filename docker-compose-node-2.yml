version: "2.2"

# IP address: 10.123.252.197

# Node 1: 10.123.252.230
# Node 2: 10.123.252.197
# Node 3: 10.123.252.206

volumes:
  hadoop_namenode:
  hadoop_datanode:
  kafka:

networks:
  default:
    name: big-data-network

services:

  datanode-1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode-1
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    ports:
      - 9864:9864
    environment:
      SERVICE_PRECONDITION: "10.123.252.230:9870"
    env_file:
      - ./hadoop_spark_kafka/hadoop-vm.env

  datanode-2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode-2
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    ports:
      - 9864:9864
    environment:
      SERVICE_PRECONDITION: "10.123.252.230:9870"
    env_file:
      - ./hadoop_spark_kafka/hadoop-vm.env

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - 2181:2181
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    ports:
      - 9092:9092
    expose:
      - '9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 10.123.252.197:2181 # This node
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://10.123.252.197:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
    restart: unless-stopped
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server 10.123.252.230:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic commit --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic languages --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic content --replication-factor 1 --partitions 1

      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic file --replication-factor 1 --partitions 1

      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerLanguages --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerSpaceUsed --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerLoC --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerHighestLoC --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerCommitFreq --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerMostCommits --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server 10.123.252.230:9092 --create --if-not-exists --topic answerFileAge --replication-factor 1 --partitions 1

      echo -e 'Successfully created the follwing topics:'
      kafka-topics --bootstrap-server 10.123.252.230:9092 --list
      "

  spark-worker:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker
    ports:
      - 8081:8081
    restart: unless-stopped
    environment:
      - "SPARK_MASTER=spark://10.123.252.206:7077"

  # content-producer:
  #   image: content-producer
  #   depends_on:
  #     - kafka
  #   build: 
  #     context: ./Producers/dotnet-content-producer/KafkaDocker
  #   restart: on-failure
  #   environment:
  #     - DAAB_KAFKA_URL="10.123.252.230:9092,10.123.252.197:9092,10.123.252.206:9092"